version: "2.4"

services:

  master:
    build: ./Dockerfiles/jenkins
    ports:
      - 8080:8080
    networks:
      - default
    volumes:
      - jmshare:/usr/share/jenkins/ref

  agent:
    build: ./Dockerfiles/jenkins-slave
    environment:
      - USER_NAME_SECRET=admin
      - PASSWORD_SECRET=admin
      - COMMAND_OPTIONS=-master http://master:8080 -labels swarm -executors 4 
    networks:
      - default
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - workspace:/workspace

  nexus:
    image: "sonatype/nexus3:3.13.0"
    ports:
      - "8081:8081"
    volumes:
      - "nexus_data:/nexus-data"
  
  sonarqube:
    image: "sonarqube:7.1-alpine"
    ports:
      - "9000:9000"
    networks:
      - sonarqube
    environment:
      SONARQUBE_JDBC_USERNAME: ${SONAR_DB_USER:-sonar}
      SONARQUBE_JDBC_PASSWORD: ${SONAR_DB_PASS:-sonar}
      SONARQUBE_JDBC_URL: "jdbc:postgresql://db:5432/sonar"
    volumes:
      - "sonar_extensions:/opt/sonarqube/extensions"
      - "sonar_plugins:/opt/sonarqube/lib/bundled-plugins"
  db:
    image: "postgres:10.1-alpine"
    networks:
      - sonarqube
    environment:
      POSTGRES_USER: ${SONAR_DB_USER:-sonar}
      POSTGRES_PASSWORD: ${SONAR_DB_PASS:-sonar}
      POSTGRES_DB: sonar
    volumes:
      - "sonar_db_data:/var/lib/postgresql/data"

networks:
  default:
  sonarqube:

volumes:
  jmshare:
  workspace:
  nexus_data:
  sonar_db_data:
  sonar_extensions:
  sonar_plugins:
